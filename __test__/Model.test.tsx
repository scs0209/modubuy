import { act, render, screen } from '@testing-library/react'
import Model from '@/app/_components/3dCanvas/Model'

// React 컴포넌트를 테스트할 때 act() 함수로 감싸는 이유는 React의 상태 업데이트나 생명주기 메서드가 동기적이든 비동기적이든, 사용자와의 상호작용을 시뮬레이션하는 것입니다. act() 함수를 사용함으로써, 컴포넌트가 실제 브라우저에서 동작하는 것처럼 React가 상태 업데이트를 일괄 처리하고, 이러한 업데이트가 반영된 후의 컴포넌트 상태를 테스트할 수 있도록 합니다.

// act() 함수는 다음과 같은 경우에 사용됩니다:

// 상태 업데이트: 컴포넌트의 상태가 업데이트될 때, 예를 들어 사용자 입력을 통해 또는 비동기적으로 데이터를 불러올 때입니다.
// 생명주기 메서드: 컴포넌트가 마운트되거나 업데이트되는 과정에서 생명주기 메서드가 호출될 때입니다.
// 이벤트 처리: 사용자의 클릭, 입력 등의 이벤트를 시뮬레이션할 때입니다.
// 위의 코드 예시에서 act() 함수로 render() 함수를 감싸는 이유는 Model 컴포넌트가 마운트되고, 그 과정에서 발생할 수 있는 상태 업데이트나 비동기 작업을 정확히 처리하기 위함입니다. 예를 들어, Model 컴포넌트 내부에서 useGLTF와 같은 훅을 사용하여 비동기적으로 모델 데이터를 불러온다면, 이 데이터가 완전히 로드되고 관련 상태 업데이트가 반영될 때까지 기다려야 합니다. act() 함수 없이 비동기 작업을 처리하면, React가 상태 업데이트를 일괄 처리하지 못하고 테스트 코드가 컴포넌트의 최종 상태를 정확히 반영하지 못할 수 있습니다.

// 따라서, act() 함수는 테스트 중인 컴포넌트가 사용자에게 보여질 최종 상태를 정확히 반영하도록 하여, 더 신뢰할 수 있는 테스트 결과를 얻기 위해 필요합니다.
describe('Model Component', () => {
  it('should render the model correctly', async () => {
    const path = 'free_avatar_for_iclone/scene'

    await act(() => {
      render(<Model path={path} />)
    })
  })
})
